#!/bin/bash

export DEBIAN_FRONTEND=noninteractive

# Build utilities
apt-get update
apt-get -y install apt-utils
apt-get -y install nano
apt-get update
apt-get -y install bash-completion
apt-get -y install git
apt-get -y install sudo

# Python
apt-get -y install python3 python3-pip
apt-get -y install swig
pip install --upgrade pip
pip install nvidia-pyindex # the index for python packages by Nvidia, we need it added before we can use `pip install -r requirements.txt`

## Add Kitware's apt repo ti install latest CMake
apt-get update
apt-get -y install apt-transport-https ca-certificates gnupg software-properties-common wget
wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
apt-add-repository 'deb https://apt.kitware.com/ubuntu/ @UBUNTU_VERSION_NAME@ main'
apt-get update
apt-get install -y kitware-archive-keyring
apt-get -y install cmake
rm /etc/apt/trusted.gpg.d/kitware.gpg

# Various general purpose libraries
apt-get -y install libboost-all-dev
apt-get -y install libprotobuf-dev protobuf-compiler
#printf "8\n48\n" | apt-get -y install libopencv-dev

# ML utilities
apt -y install @TENSORRT_REPO_FILE@
apt-get update
apt-get -y --allow-downgrades install libnvinfer@TRT_VER_MAJOR@=@NVINFER_VER@+@CUDA_VER_TEXT@ libnvinfer-plugin@TRT_VER_MAJOR@=@NVINFER_VER@+@CUDA_VER_TEXT@ \
libnvparsers@TRT_VER_MAJOR@=@NVINFER_VER@+@CUDA_VER_TEXT@ libnvonnxparsers@TRT_VER_MAJOR@=@NVINFER_VER@+@CUDA_VER_TEXT@ \
libnvinfer-bin=@NVINFER_VER@+@CUDA_VER_TEXT@ libnvinfer-dev=@NVINFER_VER@+@CUDA_VER_TEXT@ \
libnvinfer-plugin-dev=@NVINFER_VER@+@CUDA_VER_TEXT@ libnvparsers-dev=@NVINFER_VER@+@CUDA_VER_TEXT@ \
libnvonnxparsers-dev=@NVINFER_VER@+@CUDA_VER_TEXT@
apt-get update
# apt-get -y install cuda-driver-dev-@CUDA_VER_DASH@
# apt-get -y install cuda-@CUDA_VER_DASH@
apt-get -y install cuda-toolkit-@CUDA_VER_DASH@
apt-get -y install cuda-nvrtc-@CUDA_VER_DASH@
apt-get -y install tensorrt=@TRT_VER_FULL@+@CUDA_VER_TEXT@
apt-get -y install python3-libnvinfer=@NVINFER_VER@+@CUDA_VER_TEXT@ python3-libnvinfer-dev=@NVINFER_VER@+@CUDA_VER_TEXT@
apt-get -y install graphsurgeon-tf=@NVINFER_VER@+@CUDA_VER_TEXT@ uff-converter-tf=@NVINFER_VER@+@CUDA_VER_TEXT@

# Some docker images have wrong link-paths
[ -e /etc/ld.so.conf.d/z-cuda-stubs.conf ] && rm -f /etc/ld.so.conf.d/z-cuda-stubs.conf
# Create symlinnk to the correct cuda version
[ -e /usr/local/cuda ] && rm /usr/local/cuda
[ -e /usr/local/cuda-@CUDA_VER_NUM@  ] && ln -s /usr/local/cuda-@CUDA_VER_NUM@ /usr/local/cuda

# Install corect version of bazel
curl -L https://github.com/bazelbuild/bazel/releases/download/@BAZEL_VER@/bazel-@BAZEL_VER@-installer-linux-@ARCH@.sh -o /tmp/bazel_install.sh
chmod +x /tmp/bazel_install.sh
/tmp/bazel_install.sh
rm /tmp/bazel_install.sh

unset DEBIAN_FRONTEND
